// Generated by jextract

package org.example.libsample;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$0 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$0() {}
    static final FunctionDescriptor add$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle add$MH = RuntimeHelper.downcallHandle(
        "add",
        constants$0.add$FUNC
    );
    static final FunctionDescriptor subtract$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle subtract$MH = RuntimeHelper.downcallHandle(
        "subtract",
        constants$0.subtract$FUNC
    );
    static final FunctionDescriptor multiply$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle multiply$MH = RuntimeHelper.downcallHandle(
        "multiply",
        constants$0.multiply$FUNC
    );
    static final FunctionDescriptor greet$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle greet$MH = RuntimeHelper.downcallHandle(
        "greet",
        constants$0.greet$FUNC
    );
}


